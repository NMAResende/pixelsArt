{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 28,
    "pending": 0,
    "failures": 13,
    "start": "2022-08-03T21:22:24.900Z",
    "end": "2022-08-03T21:23:06.798Z",
    "duration": 41898,
    "testsRegistered": 41,
    "passPercent": 68.29268292682927,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ed264627-6371-4dc9-b95f-9aff63fb8028",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "66b13127-303d-4b9f-b56a-cdc93dac9ac5",
          "title": "1 - Adicione à página o título \"Paleta de Cores\"",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\" Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "b9358681-56d5-4e79-81d0-470b98ae6d43",
              "parentUUID": "66b13127-303d-4b9f-b56a-cdc93dac9ac5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9358681-56d5-4e79-81d0-470b98ae6d43"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 511,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "150c01d9-89c0-4bf3-a984-3584b9e5d31c",
          "title": "2 - Adicione à página uma paleta contendo quatro cores distintas",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 439,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "9535c659-35e8-4a2a-8252-17dc16eceb63",
              "parentUUID": "150c01d9-89c0-4bf3-a984-3584b9e5d31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "8b73a760-ca8c-4379-9edf-60613258d0b0",
              "parentUUID": "150c01d9-89c0-4bf3-a984-3584b9e5d31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 420,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "fe313bde-bb3d-4a65-8fba-ce44ba536d4d",
              "parentUUID": "150c01d9-89c0-4bf3-a984-3584b9e5d31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "2ea4ff0c-504f-4021-a144-135e8694e5c6",
              "parentUUID": "150c01d9-89c0-4bf3-a984-3584b9e5d31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "04348efb-5877-479d-a808-3310bc74a629",
              "parentUUID": "150c01d9-89c0-4bf3-a984-3584b9e5d31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "22e23eb5-f24b-4b65-a41c-d287509058bd",
              "parentUUID": "150c01d9-89c0-4bf3-a984-3584b9e5d31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta contendo quatro cores distintas Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "06b675d5-5a9b-4d87-a252-ec4a1278c868",
              "parentUUID": "150c01d9-89c0-4bf3-a984-3584b9e5d31c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9535c659-35e8-4a2a-8252-17dc16eceb63",
            "8b73a760-ca8c-4379-9edf-60613258d0b0",
            "fe313bde-bb3d-4a65-8fba-ce44ba536d4d",
            "2ea4ff0c-504f-4021-a144-135e8694e5c6",
            "04348efb-5877-479d-a808-3310bc74a629",
            "22e23eb5-f24b-4b65-a41c-d287509058bd",
            "06b675d5-5a9b-4d87-a252-ec4a1278c868"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2153,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0c7d8975-04e2-4a7a-b6f0-1c0f616700ef",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 261,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "0a857faa-822d-4768-b079-b54a8a1cfdeb",
              "parentUUID": "0c7d8975-04e2-4a7a-b6f0-1c0f616700ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "b2c7384a-8374-4f4c-9b8e-bf58d6af6736",
              "parentUUID": "0c7d8975-04e2-4a7a-b6f0-1c0f616700ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a857faa-822d-4768-b079-b54a8a1cfdeb",
            "b2c7384a-8374-4f4c-9b8e-bf58d6af6736"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 687,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "178d50e1-1247-4603-9206-c23c8c826c1f",
          "title": "4 - Adicione à página um quadro contendo 25 pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "a7cbcd1d-359e-4094-b6df-f15cadf079ac",
              "parentUUID": "178d50e1-1247-4603-9206-c23c8c826c1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 297,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "87caf0a3-07f0-4cb1-b690-66283ca646da",
              "parentUUID": "178d50e1-1247-4603-9206-c23c8c826c1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "b30657aa-9c04-46a2-902a-d3bc5cd5f85d",
              "parentUUID": "178d50e1-1247-4603-9206-c23c8c826c1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro contendo 25 pixels Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 224,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "c58b6287-7278-4753-b17b-39b3700be1d1",
              "parentUUID": "178d50e1-1247-4603-9206-c23c8c826c1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7cbcd1d-359e-4094-b6df-f15cadf079ac",
            "87caf0a3-07f0-4cb1-b690-66283ca646da",
            "b30657aa-9c04-46a2-902a-d3bc5cd5f85d",
            "c58b6287-7278-4753-b17b-39b3700be1d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "57b9d83c-f067-47cd-9416-f018a75142ed",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "06416053-8c39-42cf-b25e-3053e354f51b",
              "parentUUID": "57b9d83c-f067-47cd-9416-f018a75142ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 464,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "c40517ad-c92b-4081-92f3-369ff9879c95",
              "parentUUID": "57b9d83c-f067-47cd-9416-f018a75142ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06416053-8c39-42cf-b25e-3053e354f51b",
            "c40517ad-c92b-4081-92f3-369ff9879c95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 969,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c0c1219-8f58-4de7-a40a-c03529d14f5d",
          "title": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "d26c825d-70c9-4137-a298-42d9207ff267",
              "parentUUID": "1c0c1219-8f58-4de7-a40a-c03529d14f5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial da paleta de cores. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "6629a264-e5e8-4ade-811f-0671faef31bf",
              "parentUUID": "1c0c1219-8f58-4de7-a40a-c03529d14f5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d26c825d-70c9-4137-a298-42d9207ff267",
            "6629a264-e5e8-4ade-811f-0671faef31bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 466,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8184aebe-da4b-46e0-89bf-b4134b64b20e",
          "title": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 586,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "d2bac6bf-111e-45c9-a3c3-2949282ba5ca",
              "parentUUID": "8184aebe-da4b-46e0-89bf-b4134b64b20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Crie uma função para selecionar uma cor na paleta de cores e preencher os pixels no quadro Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 697,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {
                "message": "SyntaxError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.",
                "estack": "SyntaxError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.\nError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.\n    at HTMLElement.<anonymous> (http://localhost:41821/script.js:11:33)",
                "diff": null
              },
              "uuid": "9ded2738-a931-49d7-a385-fa630779ce21",
              "parentUUID": "8184aebe-da4b-46e0-89bf-b4134b64b20e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2bac6bf-111e-45c9-a3c3-2949282ba5ca"
          ],
          "failures": [
            "9ded2738-a931-49d7-a385-fa630779ce21"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1283,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3e1e486b-39b6-4dce-bdef-6d4836d116df",
          "title": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 671,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {
                "message": "SyntaxError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.",
                "estack": "SyntaxError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.\nError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.\n    at HTMLElement.<anonymous> (http://localhost:41821/script.js:11:33)",
                "diff": null
              },
              "uuid": "29676e54-221d-49b8-b51a-5f34d18e542c",
              "parentUUID": "3e1e486b-39b6-4dce-bdef-6d4836d116df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 656,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {
                "message": "SyntaxError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.",
                "estack": "SyntaxError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.\nError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.\n    at HTMLElement.<anonymous> (http://localhost:41821/script.js:11:33)",
                "diff": null
              },
              "uuid": "0928dde4-e1cc-428c-b917-f2d740f7d5bc",
              "parentUUID": "3e1e486b-39b6-4dce-bdef-6d4836d116df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Crie uma função que permita preencher um pixel do quadro com a cor selecionada na paleta de cores Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 755,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {
                "message": "SyntaxError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.",
                "estack": "SyntaxError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.\nError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.\n    at HTMLElement.<anonymous> (http://localhost:41821/script.js:11:33)",
                "diff": null
              },
              "uuid": "a70ea242-86f0-422e-a243-54971b54acb3",
              "parentUUID": "3e1e486b-39b6-4dce-bdef-6d4836d116df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "29676e54-221d-49b8-b51a-5f34d18e542c",
            "0928dde4-e1cc-428c-b917-f2d740f7d5bc",
            "a70ea242-86f0-422e-a243-54971b54acb3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2082,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebf0e48b-52d7-400b-bd97-1743923a41c2",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "5f7044c3-84b9-4860-a2f2-72c6b7ffbc12",
              "parentUUID": "ebf0e48b-52d7-400b-bd97-1743923a41c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "0837d83e-7679-4a1d-a4f6-4d280a902aee",
              "parentUUID": "ebf0e48b-52d7-400b-bd97-1743923a41c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "8142e4ab-49b7-4220-b2c2-717e9518567e",
              "parentUUID": "ebf0e48b-52d7-400b-bd97-1743923a41c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 592,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {
                "message": "SyntaxError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.",
                "estack": "SyntaxError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.\nError: Failed to execute 'querySelector' on 'Document': '#' is not a valid selector.\n    at HTMLElement.<anonymous> (http://localhost:41821/script.js:11:33)",
                "diff": null
              },
              "uuid": "aca17aa6-2a5e-419e-85e9-8bc0f244c25e",
              "parentUUID": "ebf0e48b-52d7-400b-bd97-1743923a41c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f7044c3-84b9-4860-a2f2-72c6b7ffbc12",
            "0837d83e-7679-4a1d-a4f6-4d280a902aee",
            "8142e4ab-49b7-4220-b2c2-717e9518567e"
          ],
          "failures": [
            "aca17aa6-2a5e-419e-85e9-8bc0f244c25e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1392,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f5f11e14-78b3-4049-95ef-6f7c3d5deedf",
          "title": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {},
              "uuid": "daf44e81-6efa-44d3-ad05-792d2403ead2",
              "parentUUID": "f5f11e14-78b3-4049-95ef-6f7c3d5deedf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {},
              "uuid": "e8833188-346e-4fb6-80bc-23a83ae4f372",
              "parentUUID": "f5f11e14-78b3-4049-95ef-6f7c3d5deedf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4507,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:41821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8ebd5867-63ea-4364-966e-bca85cfb41f0",
              "parentUUID": "f5f11e14-78b3-4049-95ef-6f7c3d5deedf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {},
              "uuid": "cddd5470-2bc5-4056-a732-ec074107af2d",
              "parentUUID": "f5f11e14-78b3-4049-95ef-6f7c3d5deedf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "91628771-9d7f-4062-8d93-8e06808d0700",
              "parentUUID": "f5f11e14-78b3-4049-95ef-6f7c3d5deedf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {},
              "uuid": "b4b9e8b0-b5c5-4325-b5dc-538e8b9f472e",
              "parentUUID": "f5f11e14-78b3-4049-95ef-6f7c3d5deedf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 523,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "AssertionError: expected false to match /Board inválido!/i",
                "estack": "AssertionError: expected false to match /Board inválido!/i\n    at getRet (http://localhost:41821/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41821/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41821/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41821/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41821/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41821/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41821/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41821/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "36f61e98-fdc1-4936-954f-009c7836c5d7",
              "parentUUID": "f5f11e14-78b3-4049-95ef-6f7c3d5deedf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 5136,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '100'.\n    at cypressErr (http://localhost:41821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "89c85531-530f-46a5-b0db-9a0bbd5dbd4b",
              "parentUUID": "f5f11e14-78b3-4049-95ef-6f7c3d5deedf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Crie um input que permita à pessoa usuária preencher um novo tamanho para o quadro de pixels Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 5148,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '36'.\n    at cypressErr (http://localhost:41821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0067145d-edb0-48d8-8914-1e85c907c22f",
              "parentUUID": "f5f11e14-78b3-4049-95ef-6f7c3d5deedf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "daf44e81-6efa-44d3-ad05-792d2403ead2",
            "e8833188-346e-4fb6-80bc-23a83ae4f372",
            "cddd5470-2bc5-4056-a732-ec074107af2d",
            "91628771-9d7f-4062-8d93-8e06808d0700",
            "b4b9e8b0-b5c5-4325-b5dc-538e8b9f472e"
          ],
          "failures": [
            "8ebd5867-63ea-4364-966e-bca85cfb41f0",
            "36f61e98-fdc1-4936-954f-009c7836c5d7",
            "89c85531-530f-46a5-b0db-9a0bbd5dbd4b",
            "0067145d-edb0-48d8-8914-1e85c907c22f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 16674,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cbe0a09a-f050-43c5-9994-3dff9885b376",
          "title": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 5091,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:41821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3ffe208e-876c-4d14-9511-b60d80a69360",
              "parentUUID": "cbe0a09a-f050-43c5-9994-3dff9885b376",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 672,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "7c4e90d9-1bb4-404b-886d-e5fea6646a5a",
              "parentUUID": "cbe0a09a-f050-43c5-9994-3dff9885b376",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Crie uma função que limite o tamanho mínimo e máximo do quadro de pixels Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4971,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.",
                "estack": "CypressError: Timed out retrying: Not enough elements found. Found '25', expected '2500'.\n    at cypressErr (http://localhost:41821/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41821/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41821/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41821/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41821/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41821/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41821/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41821/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8f7025fc-4a92-4bcb-b3dd-ed5fa7322e91",
              "parentUUID": "cbe0a09a-f050-43c5-9994-3dff9885b376",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c4e90d9-1bb4-404b-886d-e5fea6646a5a"
          ],
          "failures": [
            "3ffe208e-876c-4d14-9511-b60d80a69360",
            "8f7025fc-4a92-4bcb-b3dd-ed5fa7322e91"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10734,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7227686-b9c5-40d7-8787-8ae80f8ed370",
          "title": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 1150,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41821/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41821/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41821/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41821/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41821/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41821/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41821/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41821/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "944c605a-388f-455a-98e3-ed34c94ef6a4",
              "parentUUID": "e7227686-b9c5-40d7-8787-8ae80f8ed370",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Crie uma função para gerar as cores aleatoriamente ao carregar a página, com exceção da cor preta Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 833,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41821/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41821/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41821/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41821/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41821/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41821/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41821/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41821/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41821/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41821/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41821/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41821/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "1e8ec5bc-a5d0-46e7-b250-8ab72bf0df4e",
              "parentUUID": "e7227686-b9c5-40d7-8787-8ae80f8ed370",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "944c605a-388f-455a-98e3-ed34c94ef6a4",
            "1e8ec5bc-a5d0-46e7-b250-8ab72bf0df4e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1983,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}